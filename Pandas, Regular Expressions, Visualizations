{"cells":[{"cell_type":"markdown","metadata":{"id":"lF7ywjsExYfq","nbgrader":{"grade":false,"grade_id":"intro","locked":true,"schema_version":2,"solution":false}},"source":["# Homework 2: Pandas, Regular Expressions, Visualizations\n","\n","## Due Date: Fri 4/14, 11:59 pm KST\n","\n","**Collaboration Policy:** You may talk with others about the homework, but we ask that you **write your solutions individually**. If you do discuss the assignments with others, please **include their names** in the following line.\n","\n","**Collaborators**: *list collaborators here (if applicable)*"]},{"cell_type":"markdown","metadata":{"id":"niiupPGmxYfr"},"source":["### Score Breakdown\n","\n","Question | Points\n","--- | ---\n","Question 1a | 2\n","Question 1b | 1\n","Question 1c | 2\n","Question 2 | 2\n","Question 3 | 1\n","Question 4 | 2\n","Question 5a | 1\n","Question 5b | 2\n","Question 5c | 2\n","Question 6a | 1\n","Question 6b | 1\n","Question 6c | 1\n","Question 6d | 2\n","Question 6e | 2\n","Total | 22"]},{"cell_type":"markdown","metadata":{"id":"RZ-NFp-MxYfs"},"source":["### Initialize your environment\n","\n","This cell should run without error."]},{"cell_type":"code","execution_count":71,"metadata":{"id":"QjKfNGloxYfs","nbgrader":{"grade":false,"grade_id":"import","locked":true,"schema_version":2,"solution":false},"executionInfo":{"status":"ok","timestamp":1681352590229,"user_tz":-540,"elapsed":867,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[],"source":["import csv\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import json\n","import zipfile\n","from pprint import pprint # to get a more easily-readable view.\n","\n","# Ensure that Pandas shows at least 280 characters in columns, so we can see full tweets\n","pd.set_option('max_colwidth', 280)\n","\n","%matplotlib inline\n","plt.style.use('fivethirtyeight')\n","import seaborn as sns\n","sns.set()\n","sns.set_context(\"talk\")\n","import re"]},{"cell_type":"markdown","metadata":{"id":"eobO7jKlyBNy"},"source":["Some common utilities."]},{"cell_type":"code","execution_count":72,"metadata":{"id":"dU2nKrDryAPW","executionInfo":{"status":"ok","timestamp":1681352590670,"user_tz":-540,"elapsed":7,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[],"source":["def utils_head(filename, lines=5):\n","    \"\"\"\n","    Returns the first few lines of a file.\n","    \n","    filename: the name of the file to open\n","    lines: the number of lines to include\n","    \n","    return: A list of the first few lines from the file.\n","    \"\"\"\n","    from itertools import islice\n","    with open(filename, \"r\") as f:\n","        return list(islice(f, lines))"]},{"cell_type":"markdown","metadata":{"id":"iYGdu43YxYfs"},"source":["# Part 1: Bike Sharing\n","\n","The data we are exploring is collected from a bike sharing system in Washington D.C.\n","\n","The variables in this data frame are defined as:\n","\n","Variable       | Description\n","-------------- | ------------------------------------------------------------------\n","instant | record index\n","dteday | date\n","season | 1. spring <br> 2. summer <br> 3. fall <br> 4. winter\n","yr | year (0: 2011, 1:2012)\n","mnth | month ( 1 to 12)\n","hr | hour (0 to 23)\n","holiday | whether day is holiday or not\n","weekday | day of the week\n","workingday | if day is neither weekend nor holiday\n","weathersit | 1. clear or partly cloudy <br> 2. mist and clouds <br> 3. light snow or rain <br> 4. heavy rain or snow\n","temp | normalized temperature in Celsius (divided by 41)\n","atemp | normalized \"feels-like\" temperature in Celsius (divided by 50)\n","hum | normalized percent humidity (divided by 100)\n","windspeed| normalized wind speed (divided by 67)\n","casual | count of casual users\n","registered | count of registered users\n","cnt | count of total rental bikes including casual and registered  "]},{"cell_type":"markdown","metadata":{"id":"PkdgoOoey69H"},"source":["## Mount your Google Drive\n","When you run a code cell, Colab executes it on a temporary cloud instance.  Every time you open the notebook, you will be assigned a different machine.  All compute state and files saved on the previous machine will be lost.  Therefore, you may need to re-download datasets or rerun code after a reset. Here, you can mount your Google drive to the temporary cloud instance's local filesystem using the following code snippet and save files under the specified directory (note that you will have to provide permission every time you run this)."]},{"cell_type":"code","execution_count":73,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"dwPywAT3yQ2o","outputId":"972a7292-31fa-4c4f-b36b-e5746d5626b9","executionInfo":{"status":"ok","timestamp":1681352594544,"user_tz":-540,"elapsed":3880,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","\n","Number of Google drive files in /content/drive/My Drive/:\n","16\n","\n","Current directory:\n","/content\n"]}],"source":["# mount Google drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","# now you can see files\n","!echo -e \"\\nNumber of Google drive files in /content/drive/My Drive/:\"\n","!ls -l \"/content/drive/My Drive/\" | wc -l\n","# by the way, you can run any linux command by putting a ! at the start of the line\n","\n","# by default everything gets executed and saved in /content/\n","!echo -e \"\\nCurrent directory:\"\n","!pwd"]},{"cell_type":"code","execution_count":74,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"vnZ-ztOJxYft","outputId":"e346bea4-df04-4782-8019-68e155a2b550","executionInfo":{"status":"ok","timestamp":1681352594544,"user_tz":-540,"elapsed":14,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["instant,dteday,season,yr,mnth,hr,holiday,weekday,workingday,weathersit,temp,atemp,hum,windspeed,casual,registered,cnt\n","1,2011-01-01,1,0,1,0,0,6,0,1,0.24,0.2879,0.81,0,3,13,16\n","2,2011-01-01,1,0,1,1,0,6,0,1,0.22,0.2727,0.8,0,8,32,40\n","3,2011-01-01,1,0,1,2,0,6,0,1,0.22,0.2727,0.8,0,5,27,32\n","4,2011-01-01,1,0,1,3,0,6,0,1,0.24,0.2879,0.75,0,3,10,13\n"]}],"source":["workspace_path = '/content/drive/MyDrive/2023-1/데이터과학/hw2/'  # Change this path!\n","for line in utils_head(workspace_path+'bikeshare.txt'):\n","    print(line, end=\"\")"]},{"cell_type":"markdown","metadata":{"id":"AJJlSaDnxYft"},"source":["### Loading the data\n","\n","The following code loads the data into a Pandas DataFrame."]},{"cell_type":"code","execution_count":75,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":357},"id":"soMc90QMxYft","outputId":"8d356248-8314-4235-af2e-358d2be90d30","executionInfo":{"status":"ok","timestamp":1681352594544,"user_tz":-540,"elapsed":12,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   instant      dteday  season  yr  mnth  hr  holiday  weekday  workingday  \\\n","0        1  2011-01-01       1   0     1   0        0        6           0   \n","1        2  2011-01-01       1   0     1   1        0        6           0   \n","2        3  2011-01-01       1   0     1   2        0        6           0   \n","3        4  2011-01-01       1   0     1   3        0        6           0   \n","4        5  2011-01-01       1   0     1   4        0        6           0   \n","\n","   weathersit  temp   atemp   hum  windspeed  casual  registered  cnt  \n","0           1  0.24  0.2879  0.81        0.0       3          13   16  \n","1           1  0.22  0.2727  0.80        0.0       8          32   40  \n","2           1  0.22  0.2727  0.80        0.0       5          27   32  \n","3           1  0.24  0.2879  0.75        0.0       3          10   13  \n","4           1  0.24  0.2879  0.75        0.0       0           1    1  "],"text/html":["\n","  <div id=\"df-9745510c-3332-443b-bfd7-0328f964fa9c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>instant</th>\n","      <th>dteday</th>\n","      <th>season</th>\n","      <th>yr</th>\n","      <th>mnth</th>\n","      <th>hr</th>\n","      <th>holiday</th>\n","      <th>weekday</th>\n","      <th>workingday</th>\n","      <th>weathersit</th>\n","      <th>temp</th>\n","      <th>atemp</th>\n","      <th>hum</th>\n","      <th>windspeed</th>\n","      <th>casual</th>\n","      <th>registered</th>\n","      <th>cnt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.24</td>\n","      <td>0.2879</td>\n","      <td>0.81</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.22</td>\n","      <td>0.2727</td>\n","      <td>0.80</td>\n","      <td>0.0</td>\n","      <td>8</td>\n","      <td>32</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.22</td>\n","      <td>0.2727</td>\n","      <td>0.80</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>27</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.24</td>\n","      <td>0.2879</td>\n","      <td>0.75</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.24</td>\n","      <td>0.2879</td>\n","      <td>0.75</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9745510c-3332-443b-bfd7-0328f964fa9c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9745510c-3332-443b-bfd7-0328f964fa9c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9745510c-3332-443b-bfd7-0328f964fa9c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":75}],"source":["bike = pd.read_csv(workspace_path+'bikeshare.txt')\n","bike.head()"]},{"cell_type":"markdown","metadata":{"id":"7Le0aM3kxYfu"},"source":["Below, we show the shape of the file. You should see that the size of the DataFrame matches the number of lines in the file, minus the header row."]},{"cell_type":"code","execution_count":76,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"1E8fS3ZaxYfu","outputId":"4a35082a-4687-4702-ac08-6ed2199e4407","executionInfo":{"status":"ok","timestamp":1681352594545,"user_tz":-540,"elapsed":13,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(17379, 17)"]},"metadata":{},"execution_count":76}],"source":["bike.shape"]},{"cell_type":"markdown","metadata":{"id":"cOxWDMNBxYfu"},"source":["## Question 1: Data Preparation\n","A few of the variables that are numeric/integer actually encode categorical data. These include `holiday`, `weekday`, `workingday`, and `weathersit`. In the following problem, we will convert these four variables to strings specifying the categories. In particular, use 3-letter labels (`Sun`, `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, and `Sat`) for `weekday`. You may simply use `yes`/`no` for `holiday` and `workingday`. \n","\n","In this exercise we will *mutate* the data frame, **overwriting the corresponding variables in the data frame.** However, our notebook will effectively document this in-place data transformation for future readers. Make sure to leave the underlying datafile `bikeshare.txt` unmodified."]},{"cell_type":"markdown","metadata":{"id":"3oE60PhSxYfu"},"source":["### Question 1a\n","\n","\n","Decode the `holiday`, `weekday`, `workingday`, and `weathersit` fields:\n","\n","1. holiday: Convert to `yes` and `no`. **Hint**: There are fewer holidays...\n","1. weekday: It turns out that Monday is the day with the most holidays.  Mutate the `'weekday'` column to use the 3-letter label (`'Sun'`, `'Mon'`, `'Tue'`, `'Wed'`, `'Thu'`, `'Fri'`, and `'Sat'`) instead of its current numerical values. Note `0` corresponds to `Sun`, `1` to `Mon` and so on.\n","1. workingday: Convert to `yes` and `no`.\n","1. weathersit: You should replace each value with one of `Clear`, `Mist`, `Light`, or `Heavy`.\n","\n","**Note:** If you want to revert changes, run the cell that reloads the csv.\n","\n","**Hint:**  One simple approach is to use the [replace](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.replace.html) method of the pandas DataFrame class. We haven't discussed how to do this so you'll need to look at the documentation. The most concise way is with the approach described in the documentation as ``nested-dictonaries``, though there are many possible solutions. E.g. for a DataFrame nested dictionaries, e.g., `{'a': {'b': np.nan}}`, are read as follows: look in column `a` for the value `b` and replace it with `NaN`.\n","\n","<!--\n","BEGIN QUESTION\n","name: q1a\n","points: 2\n","-->"]},{"cell_type":"code","execution_count":77,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":357},"id":"Pp5RIcp5xYfv","outputId":"8d57576e-bbec-486c-db54-6e4e31f42ce5","executionInfo":{"status":"ok","timestamp":1681352594545,"user_tz":-540,"elapsed":12,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   instant      dteday  season  yr  mnth  hr holiday weekday workingday  \\\n","0        1  2011-01-01       1   0     1   0      no     Sat         no   \n","1        2  2011-01-01       1   0     1   1      no     Sat         no   \n","2        3  2011-01-01       1   0     1   2      no     Sat         no   \n","3        4  2011-01-01       1   0     1   3      no     Sat         no   \n","4        5  2011-01-01       1   0     1   4      no     Sat         no   \n","\n","  weathersit  temp   atemp   hum  windspeed  casual  registered  cnt  \n","0      Clear  0.24  0.2879  0.81        0.0       3          13   16  \n","1      Clear  0.22  0.2727  0.80        0.0       8          32   40  \n","2      Clear  0.22  0.2727  0.80        0.0       5          27   32  \n","3      Clear  0.24  0.2879  0.75        0.0       3          10   13  \n","4      Clear  0.24  0.2879  0.75        0.0       0           1    1  "],"text/html":["\n","  <div id=\"df-4e80346b-4e63-46d8-8828-6969e2086a3e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>instant</th>\n","      <th>dteday</th>\n","      <th>season</th>\n","      <th>yr</th>\n","      <th>mnth</th>\n","      <th>hr</th>\n","      <th>holiday</th>\n","      <th>weekday</th>\n","      <th>workingday</th>\n","      <th>weathersit</th>\n","      <th>temp</th>\n","      <th>atemp</th>\n","      <th>hum</th>\n","      <th>windspeed</th>\n","      <th>casual</th>\n","      <th>registered</th>\n","      <th>cnt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>Sat</td>\n","      <td>no</td>\n","      <td>Clear</td>\n","      <td>0.24</td>\n","      <td>0.2879</td>\n","      <td>0.81</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>Sat</td>\n","      <td>no</td>\n","      <td>Clear</td>\n","      <td>0.22</td>\n","      <td>0.2727</td>\n","      <td>0.80</td>\n","      <td>0.0</td>\n","      <td>8</td>\n","      <td>32</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>no</td>\n","      <td>Sat</td>\n","      <td>no</td>\n","      <td>Clear</td>\n","      <td>0.22</td>\n","      <td>0.2727</td>\n","      <td>0.80</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>27</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>Sat</td>\n","      <td>no</td>\n","      <td>Clear</td>\n","      <td>0.24</td>\n","      <td>0.2879</td>\n","      <td>0.75</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2011-01-01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>no</td>\n","      <td>Sat</td>\n","      <td>no</td>\n","      <td>Clear</td>\n","      <td>0.24</td>\n","      <td>0.2879</td>\n","      <td>0.75</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e80346b-4e63-46d8-8828-6969e2086a3e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4e80346b-4e63-46d8-8828-6969e2086a3e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4e80346b-4e63-46d8-8828-6969e2086a3e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":77}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","factor_dict = {\n","    'weekday': {0: 'Sun', 1: 'Mon', 2: 'Tue', 3: 'Wed', 4: 'Thu', 5: 'Fri', 6: 'Sat'},\n","    'holiday': {0: 'no', 1: 'yes'},\n","    'workingday': {0: 'no', 1: 'yes'},\n","    'weathersit': {1: 'Clear', 2: 'Mist', 3: 'Light', 4: 'Heavy'}\n","}\n","# -----------------------\n","# END YOUR CODE\n","bike.replace(factor_dict, inplace=True)\n","bike.head()"]},{"cell_type":"code","execution_count":78,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"YfuI7n-GxYfv","outputId":"8ad6b4ed-0010-4bad-fa75-6307947fe03a","executionInfo":{"status":"ok","timestamp":1681352594545,"user_tz":-540,"elapsed":11,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert isinstance(bike, pd.DataFrame) == True\n","assert bike['holiday'].dtype == np.dtype('O')\n","assert list(bike['holiday'].iloc[370:375]) == ['no', 'no', 'yes', 'yes', 'yes']\n","assert bike['weekday'].dtype == np.dtype('O')\n","assert bike['workingday'].dtype == np.dtype('O')\n","assert bike['weathersit'].dtype == np.dtype('O')\n","assert bike.shape == (17379, 17) or bike.shape == (17379, 18)\n","assert list(bike['weekday'].iloc[::2000]) == ['Sat', 'Tue', 'Mon', 'Mon', 'Mon', 'Sun', 'Sun', 'Sat', 'Sun']\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"poTCcgOuxYfv"},"source":["### Question 1b\n","\n","How many entries in the data correspond to holidays?  Set the variable `num_holidays` to this value.\n","\n","**Hint:** ``value_counts``\n","\n","<!--\n","BEGIN QUESTION\n","name: q1b\n","points: 1\n","-->"]},{"cell_type":"code","execution_count":79,"metadata":{"id":"8e8hi5zexYfv","executionInfo":{"status":"ok","timestamp":1681352594545,"user_tz":-540,"elapsed":10,"user":{"displayName":"류지현","userId":"09927187888088003754"}},"colab":{"base_uri":"https://localhost:8080/","height":0},"outputId":"77d645d4-1233-4019-df85-7268ebae2475"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["500"]},"metadata":{},"execution_count":79}],"source":["num_holidays = bike[bike['holiday'].str.startswith('y')]['holiday'].value_counts()[0]\n","num_holidays"]},{"cell_type":"code","execution_count":80,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"uYbgOHVSxYfw","outputId":"3e41c46b-1b52-4c03-9e5d-2199a163a9dc","executionInfo":{"status":"ok","timestamp":1681352594545,"user_tz":-540,"elapsed":9,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert num_holidays == 500\n","assert 1 <= num_holidays <= 10000\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"H2Pw2OGWxYfw"},"source":["### Question 1c (Computing Daily Total Counts)\n","\n","The granularity of this data is at the hourly level.  However, for some of the analysis we will also want to compute daily statistics.  In particular, in the next few questions we will be analyzing the daily number of registered and unregistered users.\n","\n","Construct a data frame named `daily_counts` indexed by `dteday` with the following columns:\n","* `casual`: total number of casual riders for each day\n","* `registered`: total number of registered riders for each day\n","* `workingday`: whether that day is a working day or not (`yes` or `no`)\n","\n","**Hint**: `groupby` and `agg`. For the `agg` method, please check the [documentation](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.core.groupby.DataFrameGroupBy.agg.html) for examples on applying different aggregations per column. If you use the capability to do different aggregations by column, you can do this task with a single call to `groupby` and `agg`. For the `workingday` column we can take any of the values since we are grouping by the day, thus the value will be the same within each group. Take a look at the `'first'` or `'last'` aggregation functions.\n","\n","<!--\n","BEGIN QUESTION\n","name: q1c\n","points: 2\n","-->"]},{"cell_type":"code","execution_count":81,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"ASDUd2cQxYfw","outputId":"bacf0c3b-4751-4757-fbbb-aaa9e6e9bcb0","executionInfo":{"status":"ok","timestamp":1681352594545,"user_tz":-540,"elapsed":8,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["            casual  registered workingday\n","dteday                                   \n","2011-01-01     331         654         no\n","2011-01-02     131         670         no\n","2011-01-03     120        1229        yes\n","2011-01-04     108        1454        yes\n","2011-01-05      82        1518        yes"],"text/html":["\n","  <div id=\"df-990bd62b-8baa-4fbd-831d-54e829358494\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>casual</th>\n","      <th>registered</th>\n","      <th>workingday</th>\n","    </tr>\n","    <tr>\n","      <th>dteday</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2011-01-01</th>\n","      <td>331</td>\n","      <td>654</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>2011-01-02</th>\n","      <td>131</td>\n","      <td>670</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>2011-01-03</th>\n","      <td>120</td>\n","      <td>1229</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>2011-01-04</th>\n","      <td>108</td>\n","      <td>1454</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>2011-01-05</th>\n","      <td>82</td>\n","      <td>1518</td>\n","      <td>yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-990bd62b-8baa-4fbd-831d-54e829358494')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-990bd62b-8baa-4fbd-831d-54e829358494 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-990bd62b-8baa-4fbd-831d-54e829358494');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":81}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","daily_counts = bike.groupby('dteday').agg({'casual':'sum','registered':'sum','workingday': 'first'})\n","# -----------------------\n","# END YOUR CODE\n","daily_counts.head()"]},{"cell_type":"code","execution_count":82,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"reViq-xCxYfw","outputId":"00477313-1e16-4250-b2fe-fe80afa7f586","executionInfo":{"status":"ok","timestamp":1681352594548,"user_tz":-540,"elapsed":11,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert np.round(daily_counts['casual'].mean()) == 848.0\n","assert np.round(daily_counts['casual'].var()) == 471450.0\n","assert np.round(daily_counts['registered'].mean()) == 3656.0\n","assert np.round(daily_counts['registered'].var()) == 2434400.0\n","assert sorted(list(daily_counts['workingday'].value_counts())) == [231, 500]\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"nQlQgQZpxYfw","nbgrader":{"grade":false,"grade_id":"q3","locked":true,"schema_version":2,"solution":false}},"source":["# Part 2: Trump and Tweets\n","\n","In this part, we will work with Twitter data in order to analyze Donald Trump's tweets."]},{"cell_type":"markdown","metadata":{"id":"X4rbx1c0xYfw"},"source":["Let's load data into our notebook. Run the cell below to read tweets from the json file into a list named `all_tweets`."]},{"cell_type":"code","execution_count":83,"metadata":{"id":"Cb0iHvYCxYfw","executionInfo":{"status":"ok","timestamp":1681352596229,"user_tz":-540,"elapsed":1691,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[],"source":["with open(workspace_path+\"hw2-realdonaldtrump_tweets.json\", \"r\") as f:\n","    all_tweets = json.load(f)"]},{"cell_type":"markdown","metadata":{"id":"ksPiTk5MxYfw","nbgrader":{"grade":false,"grade_id":"formatting-note","locked":true,"schema_version":2,"solution":false}},"source":["Here is what a typical tweet from `all_tweets` looks like:"]},{"cell_type":"code","execution_count":84,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"naOz-FXpxYfw","nbgrader":{"grade":false,"grade_id":"pprint-old-tweets","locked":true,"schema_version":2,"solution":false},"outputId":"f45500d6-1736-4fe2-a570-a8eb51e93882","scrolled":false,"executionInfo":{"status":"ok","timestamp":1681352596229,"user_tz":-540,"elapsed":9,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["{'contributors': None,\n"," 'coordinates': None,\n"," 'created_at': 'Tue Oct 16 18:40:18 +0000 2018',\n"," 'display_text_range': [0, 174],\n"," 'entities': {'hashtags': [], 'symbols': [], 'urls': [], 'user_mentions': []},\n"," 'favorite_count': 52115,\n"," 'favorited': False,\n"," 'full_text': 'Just spoke with the Crown Prince of Saudi Arabia who totally '\n","              'denied any knowledge of what took place in their Turkish '\n","              'Consulate. He was with Secretary of State Mike Pompeo...',\n"," 'geo': None,\n"," 'id': 1052268011900555265,\n"," 'id_str': '1052268011900555265',\n"," 'in_reply_to_screen_name': None,\n"," 'in_reply_to_status_id': None,\n"," 'in_reply_to_status_id_str': None,\n"," 'in_reply_to_user_id': None,\n"," 'in_reply_to_user_id_str': None,\n"," 'is_quote_status': False,\n"," 'lang': 'en',\n"," 'place': None,\n"," 'retweet_count': 13493,\n"," 'retweeted': False,\n"," 'source': '<a href=\"http://twitter.com/download/iphone\" '\n","           'rel=\"nofollow\">Twitter for iPhone</a>',\n"," 'truncated': False,\n"," 'user': {'contributors_enabled': False,\n","          'created_at': 'Wed Mar 18 13:46:38 +0000 2009',\n","          'default_profile': False,\n","          'default_profile_image': False,\n","          'description': '45th President of the United States of America🇺🇸',\n","          'entities': {'description': {'urls': []},\n","                       'url': {'urls': [{'display_url': 'Instagram.com/realDonaldTrump',\n","                                         'expanded_url': 'http://www.Instagram.com/realDonaldTrump',\n","                                         'indices': [0, 23],\n","                                         'url': 'https://t.co/OMxB0x7xC5'}]}},\n","          'favourites_count': 7,\n","          'follow_request_sent': False,\n","          'followers_count': 58311576,\n","          'following': True,\n","          'friends_count': 45,\n","          'geo_enabled': True,\n","          'has_extended_profile': False,\n","          'id': 25073877,\n","          'id_str': '25073877',\n","          'is_translation_enabled': True,\n","          'is_translator': False,\n","          'lang': 'en',\n","          'listed_count': 100264,\n","          'location': 'Washington, DC',\n","          'name': 'Donald J. Trump',\n","          'notifications': False,\n","          'profile_background_color': '6D5C18',\n","          'profile_background_image_url': 'http://abs.twimg.com/images/themes/theme1/bg.png',\n","          'profile_background_image_url_https': 'https://abs.twimg.com/images/themes/theme1/bg.png',\n","          'profile_background_tile': True,\n","          'profile_banner_url': 'https://pbs.twimg.com/profile_banners/25073877/1550087458',\n","          'profile_image_url': 'http://pbs.twimg.com/profile_images/874276197357596672/kUuht00m_normal.jpg',\n","          'profile_image_url_https': 'https://pbs.twimg.com/profile_images/874276197357596672/kUuht00m_normal.jpg',\n","          'profile_link_color': '1B95E0',\n","          'profile_sidebar_border_color': 'BDDCAD',\n","          'profile_sidebar_fill_color': 'C5CEC0',\n","          'profile_text_color': '333333',\n","          'profile_use_background_image': True,\n","          'protected': False,\n","          'screen_name': 'realDonaldTrump',\n","          'statuses_count': 40563,\n","          'time_zone': None,\n","          'translator_type': 'regular',\n","          'url': 'https://t.co/OMxB0x7xC5',\n","          'utc_offset': None,\n","          'verified': True}}\n"]}],"source":["pprint(all_tweets[-1])"]},{"cell_type":"markdown","metadata":{"id":"xDqJSAwZxYfx","nbgrader":{"grade":false,"grade_id":"q3b","locked":true,"schema_version":2,"solution":false}},"source":["## Question 2\n","\n","Construct a DataFrame called `trump` containing data from all the tweets stored in `all_tweets`. The index of the DataFrame should be the `ID` of each tweet (looks something like `907698529606541312`). It should have these columns:\n","\n","- `time`: The time the tweet was created encoded as a datetime object. (Use `pd.to_datetime` to encode the timestamp.)\n","- `source`: The source device of the tweet.\n","- `text`: The text of the tweet.\n","- `retweet_count`: The retweet count of the tweet. \n","\n","Finally, **the resulting DataFrame should be sorted by the index.**\n","\n","**Warning:** *Some tweets will store the text in the `text` field and other will use the `full_text` field.*\n","\n","<!--\n","BEGIN QUESTION\n","name: q1\n","points: 2\n","-->"]},{"cell_type":"code","execution_count":85,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":704},"id":"mTtwFi-uxYfx","nbgrader":{"grade":false,"grade_id":"q3b-answer","locked":false,"schema_version":2,"solution":true},"outputId":"114771fa-aff4-4831-f423-590e9a437f6a","scrolled":true,"tags":["student"],"executionInfo":{"status":"ok","timestamp":1681352598289,"user_tz":-540,"elapsed":2063,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        time  \\\n","690171032150237184 2016-01-21 13:56:11+00:00   \n","690171403388104704 2016-01-21 13:57:39+00:00   \n","690173226341691392 2016-01-21 14:04:54+00:00   \n","690176882055114758 2016-01-21 14:19:26+00:00   \n","690180284189310976 2016-01-21 14:32:57+00:00   \n","\n","                                                                                                  source  \\\n","690171032150237184  <a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android</a>   \n","690171403388104704  <a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android</a>   \n","690173226341691392  <a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android</a>   \n","690176882055114758  <a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android</a>   \n","690180284189310976  <a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android</a>   \n","\n","                                                                                                                                                            text  \\\n","690171032150237184                                                                           \"@bigop1: @realDonaldTrump  @SarahPalinUSA https://t.co/3kYQGqeVyD\"   \n","690171403388104704             \"@AmericanAsPie:  @glennbeck @SarahPalinUSA Remember when Glenn gave out gifts to ILLEGAL ALIENS at crossing the border? Me too!\"   \n","690173226341691392                   So sad that @CNN and many others refused to show the massive crowd at the arena yesterday in Oklahoma. Dishonest reporting!   \n","690176882055114758    Sad sack @JebBush has just done another ad on me, with special interest money, saying I won't beat Hillary - I WILL. But he can't beat me.   \n","690180284189310976  Low energy candidate @JebBush has wasted $80 million on his failed presidential campaign. Millions spent on me. He should go home and relax!   \n","\n","                    retweet_count  \n","690171032150237184           1059  \n","690171403388104704           1339  \n","690173226341691392           2006  \n","690176882055114758           2266  \n","690180284189310976           2886  "],"text/html":["\n","  <div id=\"df-5be32fb7-b59b-40be-8eb7-2c1220ccd3ea\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>source</th>\n","      <th>text</th>\n","      <th>retweet_count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>690171032150237184</th>\n","      <td>2016-01-21 13:56:11+00:00</td>\n","      <td>&lt;a href=\"http://twitter.com/download/android\" rel=\"nofollow\"&gt;Twitter for Android&lt;/a&gt;</td>\n","      <td>\"@bigop1: @realDonaldTrump  @SarahPalinUSA https://t.co/3kYQGqeVyD\"</td>\n","      <td>1059</td>\n","    </tr>\n","    <tr>\n","      <th>690171403388104704</th>\n","      <td>2016-01-21 13:57:39+00:00</td>\n","      <td>&lt;a href=\"http://twitter.com/download/android\" rel=\"nofollow\"&gt;Twitter for Android&lt;/a&gt;</td>\n","      <td>\"@AmericanAsPie:  @glennbeck @SarahPalinUSA Remember when Glenn gave out gifts to ILLEGAL ALIENS at crossing the border? Me too!\"</td>\n","      <td>1339</td>\n","    </tr>\n","    <tr>\n","      <th>690173226341691392</th>\n","      <td>2016-01-21 14:04:54+00:00</td>\n","      <td>&lt;a href=\"http://twitter.com/download/android\" rel=\"nofollow\"&gt;Twitter for Android&lt;/a&gt;</td>\n","      <td>So sad that @CNN and many others refused to show the massive crowd at the arena yesterday in Oklahoma. Dishonest reporting!</td>\n","      <td>2006</td>\n","    </tr>\n","    <tr>\n","      <th>690176882055114758</th>\n","      <td>2016-01-21 14:19:26+00:00</td>\n","      <td>&lt;a href=\"http://twitter.com/download/android\" rel=\"nofollow\"&gt;Twitter for Android&lt;/a&gt;</td>\n","      <td>Sad sack @JebBush has just done another ad on me, with special interest money, saying I won't beat Hillary - I WILL. But he can't beat me.</td>\n","      <td>2266</td>\n","    </tr>\n","    <tr>\n","      <th>690180284189310976</th>\n","      <td>2016-01-21 14:32:57+00:00</td>\n","      <td>&lt;a href=\"http://twitter.com/download/android\" rel=\"nofollow\"&gt;Twitter for Android&lt;/a&gt;</td>\n","      <td>Low energy candidate @JebBush has wasted $80 million on his failed presidential campaign. Millions spent on me. He should go home and relax!</td>\n","      <td>2886</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5be32fb7-b59b-40be-8eb7-2c1220ccd3ea')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5be32fb7-b59b-40be-8eb7-2c1220ccd3ea button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5be32fb7-b59b-40be-8eb7-2c1220ccd3ea');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":85}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","trump = pd.DataFrame(all_tweets).set_index(\"id\").sort_index()\n","trump['text'] = trump['text'].fillna(trump['full_text'])\n","trump = trump.loc[:,['created_at','source','text','retweet_count']]\n","trump['created_at'] = pd.to_datetime(trump['created_at'])\n","trump = trump.rename(columns={'created_at':'time'})\n","trump.index.name=None\n","# -----------------------\n","# END YOUR CODE\n","trump.head()"]},{"cell_type":"code","execution_count":86,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"0sI8ZidpxYfx","outputId":"46282e08-7ef4-4267-824b-dcd0f3c33653","executionInfo":{"status":"ok","timestamp":1681352598289,"user_tz":-540,"elapsed":16,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert isinstance(trump, pd.DataFrame)\n","assert 10000 < trump.shape[0] < 11000\n","assert trump.shape[1] >= 4\n","assert 831846101179314177 in trump.index\n","assert all(col in trump.columns for col in ['time', 'source', 'text', 'retweet_count'])\n","assert np.sometrue([('Twitter for iPhone' in s) for s in trump['source'].unique()])\n","assert trump['text'].dtype == np.dtype('O')\n","assert trump['retweet_count'].dtype == np.dtype('int64')\n","assert 753063644578144260 in trump.index\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"vEGi5K8yxYfx","nbgrader":{"grade":false,"grade_id":"question4","locked":true,"schema_version":2,"solution":false}},"source":["In the following questions, we are going to find out the charateristics of Trump tweets and the devices used for the tweets.\n","\n","First let's examine the source field:"]},{"cell_type":"code","execution_count":87,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"sNNelzqoxYfx","nbgrader":{"grade":false,"grade_id":"unique-sources","locked":true,"schema_version":2,"solution":false},"outputId":"434e7f3a-7773-4701-8c13-4363b85b7623","executionInfo":{"status":"ok","timestamp":1681352598289,"user_tz":-540,"elapsed":11,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android</a>',\n","       '<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>',\n","       '<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>',\n","       '<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Mobile Web (M5)</a>',\n","       '<a href=\"http://instagram.com\" rel=\"nofollow\">Instagram</a>',\n","       '<a href=\"http://twitter.com/#!/download/ipad\" rel=\"nofollow\">Twitter for iPad</a>',\n","       '<a href=\"https://studio.twitter.com\" rel=\"nofollow\">Media Studio</a>',\n","       '<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>',\n","       '<a href=\"https://ads.twitter.com\" rel=\"nofollow\">Twitter Ads</a>',\n","       '<a href=\"https://studio.twitter.com\" rel=\"nofollow\">Twitter Media Studio</a>'],\n","      dtype=object)"]},"metadata":{},"execution_count":87}],"source":["trump['source'].unique()"]},{"cell_type":"markdown","metadata":{"id":"wNGYZnbhxYfx","nbgrader":{"grade":false,"grade_id":"q4a","locked":true,"schema_version":2,"solution":false}},"source":["## Question 3\n","\n","Notice how sources like \"Twitter for Android\" or \"Instagram\" are surrounded by HTML tags. In the cell below, clean up the `source` field by removing the HTML tags from each `source` entry.\n","\n","**Hints:** \n","* Use `trump['source'].str.replace` along with a regular expression.\n","* You may find it helpful to experiment with regular expressions at [regex101.com](https://regex101.com/).\n","\n","<!--\n","BEGIN QUESTION\n","name: q2\n","points: 1\n","-->"]},{"cell_type":"code","execution_count":88,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"Q30qPWvrxYfx","nbgrader":{"grade":false,"grade_id":"q4a-answer","locked":false,"schema_version":2,"solution":true},"outputId":"cb827121-0555-4adb-9bca-4d91fa795b61","executionInfo":{"status":"ok","timestamp":1681352598290,"user_tz":-540,"elapsed":9,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-88-3a9a46554292>:4: FutureWarning: The default value of regex will change from True to False in a future version.\n","  trump['source'] = trump['source'].str.replace(pattern,'')\n"]}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","pattern = r\"<[^>]+>\"\n","trump['source'] = trump['source'].str.replace(pattern,'')\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"code","execution_count":89,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"S-ZRGcICxYfx","outputId":"cf82af44-4248-46c6-e97b-924ae5309562","executionInfo":{"status":"ok","timestamp":1681352598290,"user_tz":-540,"elapsed":7,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert set(trump['source'].unique()) == set(['Twitter for Android', 'Twitter for iPhone', 'Twitter Web Client',\n","       'Mobile Web (M5)', 'Instagram', 'Twitter for iPad', 'Media Studio',\n","       'Periscope', 'Twitter Ads', 'Twitter Media Studio'])\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"dIHHU6l-xYfx","nbgrader":{"grade":false,"grade_id":"note-about-device-usage","locked":true,"schema_version":2,"solution":false}},"source":["In the following plot, we see that there are two device types that are more commonly used than others."]},{"cell_type":"code","execution_count":90,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":638},"id":"XFMAutqJxYfx","nbgrader":{"grade":false,"grade_id":"device-usage-plot","locked":true,"schema_version":2,"solution":false},"outputId":"e92bbd6c-2442-478d-c560-056d63bb643d","executionInfo":{"status":"ok","timestamp":1681352599111,"user_tz":-540,"elapsed":827,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure(figsize=(6, 4))\n","trump['source'].value_counts().plot(kind=\"bar\")\n","plt.ylabel(\"Number of Tweets\")\n","plt.title(\"Number of Tweets by Source\");"]},{"cell_type":"markdown","metadata":{"id":"a8f_kNOKxYfx","nbgrader":{"grade":false,"grade_id":"q5","locked":true,"schema_version":2,"solution":false}},"source":["## Question 4\n","\n","Now that we have cleaned up the `source` field, let's now look at which device Trump has used over the entire time period of this dataset.\n","\n","To examine the distribution of dates we will convert the date to a fractional year that can be plotted as a distribution.\n","\n","(Code borrowed from https://stackoverflow.com/questions/6451655/python-how-to-convert-datetime-dates-to-decimal-years)"]},{"cell_type":"code","execution_count":91,"metadata":{"id":"QElbROFqxYfx","nbgrader":{"grade":false,"grade_id":"fractional-year","locked":true,"schema_version":2,"solution":false},"executionInfo":{"status":"ok","timestamp":1681352599112,"user_tz":-540,"elapsed":12,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[],"source":["import datetime\n","def year_fraction(date):\n","    start = datetime.date(date.year, 1, 1).toordinal()\n","    year_length = datetime.date(date.year+1, 1, 1).toordinal() - start\n","    return date.year + float(date.toordinal() - start) / year_length\n","\n","trump['year'] = trump['time'].apply(year_fraction)"]},{"cell_type":"markdown","metadata":{"id":"Fp-A99mkxYfy","nbgrader":{"grade":false,"grade_id":"q5a","locked":true,"schema_version":2,"solution":false}},"source":["Now, use `sns.distplot` to overlay the distributions of Trump's 2 most frequently used web technologies over the years.\n","\n","<!--\n","BEGIN QUESTION\n","name: q3\n","points: 2\n","manual: true\n","-->\n","<!-- EXPORT TO PDF -->"]},{"cell_type":"code","execution_count":92,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":937},"id":"LTLKP3TBxYfy","nbgrader":{"grade":true,"grade_id":"q5a-answer","locked":false,"points":2,"schema_version":2,"solution":true},"outputId":"f50d3c05-535b-4516-f92d-198b44c23d0c","scrolled":false,"executionInfo":{"status":"ok","timestamp":1681352600676,"user_tz":-540,"elapsed":1574,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-92-ddf009b03be2>:6: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(trump[trump['source'].isin([device])]['year'], label=label_name)\n","<ipython-input-92-ddf009b03be2>:6: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(trump[trump['source'].isin([device])]['year'], label=label_name)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f8a4a911670>"]},"metadata":{},"execution_count":92},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","top_devices = dict(trump['source'].value_counts()[0:2]).keys()\n","for device in top_devices:\n","  label_name = 'iPhone' if device == 'Twitter for iPhone' else 'Android'\n","  sns.distplot(trump[trump['source'].isin([device])]['year'], label=label_name)\n","plt.title(\"Distributions of Tweet Sources Over Years\")\n","plt.legend()\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"markdown","metadata":{"id":"dIcyt69nxYfy","nbgrader":{"grade":false,"grade_id":"q4b","locked":true,"schema_version":2,"solution":false}},"source":["## Question 5\n","\n","\n","Is there a difference between Trump's tweet behavior across these devices? We will attempt to answer this question in our subsequent analysis.\n","\n","First, we'll take a look at whether Trump's tweets from an Android device come at different times than his tweets from an iPhone. Note that Twitter gives us his tweets in the [UTC timezone](https://www.wikiwand.com/en/List_of_UTC_time_offsets) (notice the `+0000` in the first few tweets)."]},{"cell_type":"code","execution_count":93,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"lDlxl9_3xYfy","nbgrader":{"grade":false,"grade_id":"tweet-created-at","locked":true,"schema_version":2,"solution":false},"outputId":"012976dd-7415-4723-bbb7-a75ce279ce65","executionInfo":{"status":"ok","timestamp":1681352600677,"user_tz":-540,"elapsed":19,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Wed Oct 12 14:00:48 +0000 2016\n","Wed Oct 12 13:46:43 +0000 2016\n","Wed Oct 12 12:59:05 +0000 2016\n"]}],"source":["for tweet in all_tweets[:3]:\n","    print(tweet['created_at'])"]},{"cell_type":"markdown","metadata":{"id":"__EWJ5tgxYfy","nbgrader":{"grade":false,"grade_id":"convert-to-est-justification","locked":true,"schema_version":2,"solution":false}},"source":["We'll convert the tweet times to US Eastern Time, the timezone of New York and Washington D.C., since those are the places we would expect the most tweet activity from Trump."]},{"cell_type":"code","execution_count":94,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":704},"id":"P1atUmOZxYfy","nbgrader":{"grade":false,"grade_id":"convert-to-est","locked":true,"schema_version":2,"solution":false},"outputId":"c7424865-b066-4390-e23f-1dd1ae9d5462","executionInfo":{"status":"ok","timestamp":1681352600677,"user_tz":-540,"elapsed":15,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        time               source  \\\n","690171032150237184 2016-01-21 13:56:11+00:00  Twitter for Android   \n","690171403388104704 2016-01-21 13:57:39+00:00  Twitter for Android   \n","690173226341691392 2016-01-21 14:04:54+00:00  Twitter for Android   \n","690176882055114758 2016-01-21 14:19:26+00:00  Twitter for Android   \n","690180284189310976 2016-01-21 14:32:57+00:00  Twitter for Android   \n","\n","                                                                                                                                                            text  \\\n","690171032150237184                                                                           \"@bigop1: @realDonaldTrump  @SarahPalinUSA https://t.co/3kYQGqeVyD\"   \n","690171403388104704             \"@AmericanAsPie:  @glennbeck @SarahPalinUSA Remember when Glenn gave out gifts to ILLEGAL ALIENS at crossing the border? Me too!\"   \n","690173226341691392                   So sad that @CNN and many others refused to show the massive crowd at the arena yesterday in Oklahoma. Dishonest reporting!   \n","690176882055114758    Sad sack @JebBush has just done another ad on me, with special interest money, saying I won't beat Hillary - I WILL. But he can't beat me.   \n","690180284189310976  Low energy candidate @JebBush has wasted $80 million on his failed presidential campaign. Millions spent on me. He should go home and relax!   \n","\n","                    retweet_count         year                  est_time  \n","690171032150237184           1059  2016.054645 2016-01-21 08:56:11-05:00  \n","690171403388104704           1339  2016.054645 2016-01-21 08:57:39-05:00  \n","690173226341691392           2006  2016.054645 2016-01-21 09:04:54-05:00  \n","690176882055114758           2266  2016.054645 2016-01-21 09:19:26-05:00  \n","690180284189310976           2886  2016.054645 2016-01-21 09:32:57-05:00  "],"text/html":["\n","  <div id=\"df-ec499450-4ff9-46fc-a1ed-58a13c1331fc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>source</th>\n","      <th>text</th>\n","      <th>retweet_count</th>\n","      <th>year</th>\n","      <th>est_time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>690171032150237184</th>\n","      <td>2016-01-21 13:56:11+00:00</td>\n","      <td>Twitter for Android</td>\n","      <td>\"@bigop1: @realDonaldTrump  @SarahPalinUSA https://t.co/3kYQGqeVyD\"</td>\n","      <td>1059</td>\n","      <td>2016.054645</td>\n","      <td>2016-01-21 08:56:11-05:00</td>\n","    </tr>\n","    <tr>\n","      <th>690171403388104704</th>\n","      <td>2016-01-21 13:57:39+00:00</td>\n","      <td>Twitter for Android</td>\n","      <td>\"@AmericanAsPie:  @glennbeck @SarahPalinUSA Remember when Glenn gave out gifts to ILLEGAL ALIENS at crossing the border? Me too!\"</td>\n","      <td>1339</td>\n","      <td>2016.054645</td>\n","      <td>2016-01-21 08:57:39-05:00</td>\n","    </tr>\n","    <tr>\n","      <th>690173226341691392</th>\n","      <td>2016-01-21 14:04:54+00:00</td>\n","      <td>Twitter for Android</td>\n","      <td>So sad that @CNN and many others refused to show the massive crowd at the arena yesterday in Oklahoma. Dishonest reporting!</td>\n","      <td>2006</td>\n","      <td>2016.054645</td>\n","      <td>2016-01-21 09:04:54-05:00</td>\n","    </tr>\n","    <tr>\n","      <th>690176882055114758</th>\n","      <td>2016-01-21 14:19:26+00:00</td>\n","      <td>Twitter for Android</td>\n","      <td>Sad sack @JebBush has just done another ad on me, with special interest money, saying I won't beat Hillary - I WILL. But he can't beat me.</td>\n","      <td>2266</td>\n","      <td>2016.054645</td>\n","      <td>2016-01-21 09:19:26-05:00</td>\n","    </tr>\n","    <tr>\n","      <th>690180284189310976</th>\n","      <td>2016-01-21 14:32:57+00:00</td>\n","      <td>Twitter for Android</td>\n","      <td>Low energy candidate @JebBush has wasted $80 million on his failed presidential campaign. Millions spent on me. He should go home and relax!</td>\n","      <td>2886</td>\n","      <td>2016.054645</td>\n","      <td>2016-01-21 09:32:57-05:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec499450-4ff9-46fc-a1ed-58a13c1331fc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ec499450-4ff9-46fc-a1ed-58a13c1331fc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ec499450-4ff9-46fc-a1ed-58a13c1331fc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":94}],"source":["trump['est_time'] = (\n","    trump['time'].dt.tz_convert(\"UTC\") # Set initial timezone to UTC\n","                 .dt.tz_convert(\"EST\") # Convert to Eastern Time\n",")\n","trump.head()"]},{"cell_type":"markdown","metadata":{"id":"HcG1p2cIxYfy","nbgrader":{"grade":false,"grade_id":"need-to-do","locked":true,"schema_version":2,"solution":false}},"source":["### Question 5a\n","\n","Add a column called `hour` to the `trump` table which contains the hour of the day as floating point number computed by:\n","\n","$$\n","\\text{hour} + \\frac{\\text{minute}}{60} + \\frac{\\text{second}}{60^2}\n","$$\n","\n","* **Hint:** See the cell above for an example of working with [dt accessors](https://pandas.pydata.org/pandas-docs/stable/getting_started/basics.html#basics-dt-accessors).\n","\n","<!--\n","BEGIN QUESTION\n","name: q4a\n","points: 1\n","-->"]},{"cell_type":"code","execution_count":95,"metadata":{"id":"0Uez8x93xYfy","nbgrader":{"grade":false,"grade_id":"q4b-answer","locked":false,"schema_version":2,"solution":true},"tags":["student"],"executionInfo":{"status":"ok","timestamp":1681352600678,"user_tz":-540,"elapsed":15,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","trump['hour'] = (\n","    trump['est_time'].dt.hour +\n","    (trump['est_time'].dt.minute / 60) +\n","    (trump['est_time'].dt.second / 60**2)\n",")\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"code","execution_count":96,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"IxZJs9_5xYfy","outputId":"cd39af33-4920-46ed-c4b1-54310c06aee3","executionInfo":{"status":"ok","timestamp":1681352600678,"user_tz":-540,"elapsed":15,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert np.isclose(trump.loc[690171032150237184]['hour'], 8.93639) == True\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"ibhqCymPxYfy","nbgrader":{"grade":false,"grade_id":"q4c","locked":true,"schema_version":2,"solution":false}},"source":["### Question 5b\n","\n","Use this data along with the seaborn `distplot` function to examine the distribution over hours of the day in eastern time that trump tweets on each device for the 2 most commonly used devices.\n","\n","<!--\n","BEGIN QUESTION\n","name: q4b\n","points: 2\n","manual: true\n","-->\n","<!-- EXPORT TO PDF -->"]},{"cell_type":"code","execution_count":97,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":929},"id":"5c6C9Wz3xYfy","nbgrader":{"grade":true,"grade_id":"q4c-answer","locked":false,"points":2,"schema_version":2,"solution":true},"outputId":"ca8ab3cf-6cc2-4032-baf1-29c27906c95d","executionInfo":{"status":"ok","timestamp":1681352600678,"user_tz":-540,"elapsed":13,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-97-c65eec1adb80>:6: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(trump[trump['source'].isin([device])]['hour'],hist=False,label=label_name)\n","<ipython-input-97-c65eec1adb80>:6: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(trump[trump['source'].isin([device])]['hour'],hist=False,label=label_name)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f8a4ac774f0>"]},"metadata":{},"execution_count":97},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","top_devices = dict(trump['source'].value_counts()[0:2]).keys()\n","for device in top_devices:\n","  label_name = 'iPhone' if device == 'Twitter for iPhone' else 'Android'\n","  sns.distplot(trump[trump['source'].isin([device])]['hour'],hist=False,label=label_name)\n","plt.xticks([0,10,20])\n","plt.title(\"Distribution of Tweet Hours for Different Tweet Sources\")\n","plt.legend()\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"markdown","metadata":{"id":"FgTdP6NexYfy","nbgrader":{"grade":false,"grade_id":"q4d","locked":true,"schema_version":2,"solution":false}},"source":["### Question 5c\n","\n","According to [this Verge article](https://www.theverge.com/2017/3/29/15103504/donald-trump-iphone-using-switched-android), Donald Trump switched from an Android to an iPhone sometime in March 2017.\n","\n","Let's see if this information significantly changes our plot. Create a figure similar to your figure from question 5b, but this time, only use tweets that were tweeted before 2017.\n","\n","<!--\n","BEGIN QUESTION\n","name: q4c\n","points: 2\n","manual: true\n","-->\n","<!-- EXPORT TO PDF -->"]},{"cell_type":"code","execution_count":98,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":868},"id":"zeFAIIBVxYfy","nbgrader":{"grade":true,"grade_id":"cell-9d60149ec24272e3","locked":false,"points":0,"schema_version":2,"solution":true},"outputId":"b2716b49-f0ea-48ed-e2ab-59c1681058b2","executionInfo":{"status":"ok","timestamp":1681352601887,"user_tz":-540,"elapsed":1219,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-98-5fa3d05dbda5>:6: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(trump[(trump['source'].isin([device])) & (trump['year'] < 2017)]['hour'],hist=False, label=label_name)\n","<ipython-input-98-5fa3d05dbda5>:6: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(trump[(trump['source'].isin([device])) & (trump['year'] < 2017)]['hour'],hist=False, label=label_name)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f8a4172a2e0>"]},"metadata":{},"execution_count":98},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","top_devices = dict(trump['source'].value_counts()[0:2]).keys()\n","for device in top_devices:\n","  label_name = 'iPhone' if device == 'Twitter for iPhone' else 'Android'\n","  sns.distplot(trump[(trump['source'].isin([device])) & (trump['year'] < 2017)]['hour'],hist=False, label=label_name)\n","plt.xticks([0,10,20])\n","plt.title(\"Distribution of Tweet Hours for Different Tweet Sources (pre-2017)\")\n","plt.legend()\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"markdown","metadata":{"id":"xkt4UfgpxYfy"},"source":["### Question 5d\n","\n","During the campaign, it was theorized that Donald Trump's tweets from Android devices were written by him personally, and the tweets from iPhones were from his staff. Does your figure give support to this theory? What kinds of additional analysis could help support or reject this claim?\n","\n","<!--\n","BEGIN QUESTION\n","name: q4d\n","points: 1\n","manual: true\n","-->\n","<!-- EXPORT TO PDF -->"]},{"cell_type":"markdown","metadata":{"id":"ISZNN5rhxYfy"},"source":["Answer: 핸드폰을 바꾸기 전인 2017년 3월 이전까지 안드로이드와 아이폰의 사용 시간을 봤을 때 서로 다른 시간대에 사용한것이 다른 사용자가 사용했다고 분석할 수 있다. 또한 동시간대에 두개의 디바이스를 통해 트위터를 했다는 것을 보면 두 디바이스는 서로 다른 사람이 트위터를 작성한 것을 볼 수 있다. \n","\n","추가적인 분석을 위해서는 스테프의 근무시간을 찾아서 그 시간대를 제외한 시간의 트위터 사용 기기를 보면 스테프가 아님을 알 수 있다. \n"]},{"cell_type":"markdown","metadata":{"id":"vLqDaECsxYfz","nbgrader":{"grade":false,"grade_id":"q6-header","locked":true,"schema_version":2,"solution":false}},"source":["---\n","# Part 3: Sentiment Analysis\n","\n","It turns out that we can use the words in Trump's tweets to calculate a measure of the sentiment of the tweet. For example, the sentence \"I love America!\" has positive sentiment, whereas the sentence \"I hate taxes!\" has a negative sentiment. In addition, some words have stronger positive / negative sentiment than others: \"I love America.\" is more positive than \"I like America.\"\n","\n","We will use the [VADER (Valence Aware Dictionary and sEntiment Reasoner)](https://github.com/cjhutto/vaderSentiment) lexicon to analyze the sentiment of Trump's tweets. VADER is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media which is great for our usage.\n","\n","The VADER lexicon gives the sentiment of individual words. Run the following cell to show the first few rows of the lexicon:"]},{"cell_type":"code","execution_count":99,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"_P2NvSyxxYfz","nbgrader":{"grade":false,"grade_id":"head-vader","locked":true,"schema_version":2,"solution":false},"outputId":"d7e4f3b4-e646-4faf-a7d4-4ed296c84a0a","executionInfo":{"status":"ok","timestamp":1681352601887,"user_tz":-540,"elapsed":28,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["$:\t-1.5\t0.80623\t[-1, -1, -1, -1, -3, -1, -3, -1, -2, -1]\n","%)\t-0.4\t1.0198\t[-1, 0, -1, 0, 0, -2, -1, 2, -1, 0]\n","%-)\t-1.5\t1.43178\t[-2, 0, -2, -2, -1, 2, -2, -3, -2, -3]\n","&-:\t-0.4\t1.42829\t[-3, -1, 0, 0, -1, -1, -1, 2, -1, 2]\n","&:\t-0.7\t0.64031\t[0, -1, -1, -1, 1, -1, -1, -1, -1, -1]\n","( '}{' )\t1.6\t0.66332\t[1, 2, 2, 1, 1, 2, 2, 1, 3, 1]\n","(%\t-0.9\t0.9434\t[0, 0, 1, -1, -1, -1, -2, -2, -1, -2]\n","('-:\t2.2\t1.16619\t[4, 1, 4, 3, 1, 2, 3, 1, 2, 1]\n","(':\t2.3\t0.9\t[1, 3, 3, 2, 2, 4, 2, 3, 1, 2]\n","((-:\t2.1\t0.53852\t[2, 2, 2, 1, 2, 3, 2, 2, 3, 2]\n","\n"]}],"source":["print(''.join(open(workspace_path+\"vader_lexicon.txt\").readlines()[:10]))"]},{"cell_type":"markdown","metadata":{"id":"A5xLy2PKxYfz","nbgrader":{"grade":false,"grade_id":"q6a-header","locked":true,"schema_version":2,"solution":false}},"source":["## Question 6\n","\n","As you can see, the lexicon contains emojis too! Each row contains a word and the *polarity* of that word, measuring how positive or negative the word is.\n","\n","(How did they decide the polarities of these words? What are the other two columns in the lexicon? See the link above.)\n","\n","### Question 6a\n","\n","Read in the lexicon into a DataFrame called `sent`. The index of the DataFrame should be the words in the lexicon. `sent` should have one column named `polarity`, storing the polarity of each word.\n","\n","* **Hint:** The `pd.read_csv` function may help here. \n","\n","<!--\n","BEGIN QUESTION\n","name: q5a\n","points: 1\n","-->"]},{"cell_type":"code","execution_count":100,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Plzk1TzZxYfz","nbgrader":{"grade":false,"grade_id":"q6a1","locked":false,"schema_version":2,"solution":true},"outputId":"249f151e-d3c5-4a1c-aee3-571d2367dbe2","tags":["student"],"executionInfo":{"status":"ok","timestamp":1681352601887,"user_tz":-540,"elapsed":24,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     polarity\n","$:       -1.5\n","%)       -0.4\n","%-)      -1.5\n","&-:      -0.4\n","&:       -0.7"],"text/html":["\n","  <div id=\"df-f7206e4f-91f6-4fc8-9766-27a2995d2f44\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>polarity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>$:</th>\n","      <td>-1.5</td>\n","    </tr>\n","    <tr>\n","      <th>%)</th>\n","      <td>-0.4</td>\n","    </tr>\n","    <tr>\n","      <th>%-)</th>\n","      <td>-1.5</td>\n","    </tr>\n","    <tr>\n","      <th>&amp;-:</th>\n","      <td>-0.4</td>\n","    </tr>\n","    <tr>\n","      <th>&amp;:</th>\n","      <td>-0.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7206e4f-91f6-4fc8-9766-27a2995d2f44')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f7206e4f-91f6-4fc8-9766-27a2995d2f44 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f7206e4f-91f6-4fc8-9766-27a2995d2f44');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":100}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","sent = pd.read_csv(workspace_path+'vader_lexicon.txt',sep ='\\t',names=['polarity','1','2'])\n","sent.drop(labels=['1','2'],axis=1,inplace=True)\n","# -----------------------\n","# END YOUR CODE\n","sent.head()"]},{"cell_type":"code","execution_count":101,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"URVMxs-ixYfz","outputId":"b338d8bd-eefa-40cf-8bc5-06c83b40a85d","executionInfo":{"status":"ok","timestamp":1681352601888,"user_tz":-540,"elapsed":24,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert np.allclose(sent['polarity'].head(), [-1.5, -0.4, -1.5, -0.4, -0.7]) == True\n","assert list(sent.index[5000:5005]) == ['paranoids', 'pardon', 'pardoned', 'pardoning', 'pardons']\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"_9PMDuxCxYfz","nbgrader":{"grade":false,"grade_id":"q6b-header","locked":true,"schema_version":2,"solution":false}},"source":["### Question 6b\n","\n","Now, let's use this lexicon to calculate the overall sentiment for each of Trump's tweets. Here's the basic idea:\n","\n","1. For each tweet, find the sentiment of each word.\n","2. Calculate the sentiment of each tweet by taking the sum of the sentiments of its words.\n","\n","First, let's lowercase the text in the tweets since the lexicon is also lowercase. Set the `text` column of the `trump` DataFrame to be the lowercased text of each tweet.\n","\n","<!--\n","BEGIN QUESTION\n","name: q5b\n","points: 1\n","-->"]},{"cell_type":"code","execution_count":102,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":704},"id":"PWXX7OYfxYfz","nbgrader":{"grade":false,"grade_id":"q6b-answer","locked":false,"schema_version":2,"solution":true},"outputId":"82ced59c-799b-46cf-a793-35dad44aab5d","tags":["student"],"executionInfo":{"status":"ok","timestamp":1681352601888,"user_tz":-540,"elapsed":22,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        time               source  \\\n","690171032150237184 2016-01-21 13:56:11+00:00  Twitter for Android   \n","690171403388104704 2016-01-21 13:57:39+00:00  Twitter for Android   \n","690173226341691392 2016-01-21 14:04:54+00:00  Twitter for Android   \n","690176882055114758 2016-01-21 14:19:26+00:00  Twitter for Android   \n","690180284189310976 2016-01-21 14:32:57+00:00  Twitter for Android   \n","\n","                                                                                                                                                            text  \\\n","690171032150237184                                                                           \"@bigop1: @realdonaldtrump  @sarahpalinusa https://t.co/3kyqgqevyd\"   \n","690171403388104704             \"@americanaspie:  @glennbeck @sarahpalinusa remember when glenn gave out gifts to illegal aliens at crossing the border? me too!\"   \n","690173226341691392                   so sad that @cnn and many others refused to show the massive crowd at the arena yesterday in oklahoma. dishonest reporting!   \n","690176882055114758    sad sack @jebbush has just done another ad on me, with special interest money, saying i won't beat hillary - i will. but he can't beat me.   \n","690180284189310976  low energy candidate @jebbush has wasted $80 million on his failed presidential campaign. millions spent on me. he should go home and relax!   \n","\n","                    retweet_count         year                  est_time  \\\n","690171032150237184           1059  2016.054645 2016-01-21 08:56:11-05:00   \n","690171403388104704           1339  2016.054645 2016-01-21 08:57:39-05:00   \n","690173226341691392           2006  2016.054645 2016-01-21 09:04:54-05:00   \n","690176882055114758           2266  2016.054645 2016-01-21 09:19:26-05:00   \n","690180284189310976           2886  2016.054645 2016-01-21 09:32:57-05:00   \n","\n","                        hour  \n","690171032150237184  8.936389  \n","690171403388104704  8.960833  \n","690173226341691392  9.081667  \n","690176882055114758  9.323889  \n","690180284189310976  9.549167  "],"text/html":["\n","  <div id=\"df-dce958e0-cc25-49b1-8a22-2edc6d1f8b7a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>source</th>\n","      <th>text</th>\n","      <th>retweet_count</th>\n","      <th>year</th>\n","      <th>est_time</th>\n","      <th>hour</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>690171032150237184</th>\n","      <td>2016-01-21 13:56:11+00:00</td>\n","      <td>Twitter for Android</td>\n","      <td>\"@bigop1: @realdonaldtrump  @sarahpalinusa https://t.co/3kyqgqevyd\"</td>\n","      <td>1059</td>\n","      <td>2016.054645</td>\n","      <td>2016-01-21 08:56:11-05:00</td>\n","      <td>8.936389</td>\n","    </tr>\n","    <tr>\n","      <th>690171403388104704</th>\n","      <td>2016-01-21 13:57:39+00:00</td>\n","      <td>Twitter for Android</td>\n","      <td>\"@americanaspie:  @glennbeck @sarahpalinusa remember when glenn gave out gifts to illegal aliens at crossing the border? me too!\"</td>\n","      <td>1339</td>\n","      <td>2016.054645</td>\n","      <td>2016-01-21 08:57:39-05:00</td>\n","      <td>8.960833</td>\n","    </tr>\n","    <tr>\n","      <th>690173226341691392</th>\n","      <td>2016-01-21 14:04:54+00:00</td>\n","      <td>Twitter for Android</td>\n","      <td>so sad that @cnn and many others refused to show the massive crowd at the arena yesterday in oklahoma. dishonest reporting!</td>\n","      <td>2006</td>\n","      <td>2016.054645</td>\n","      <td>2016-01-21 09:04:54-05:00</td>\n","      <td>9.081667</td>\n","    </tr>\n","    <tr>\n","      <th>690176882055114758</th>\n","      <td>2016-01-21 14:19:26+00:00</td>\n","      <td>Twitter for Android</td>\n","      <td>sad sack @jebbush has just done another ad on me, with special interest money, saying i won't beat hillary - i will. but he can't beat me.</td>\n","      <td>2266</td>\n","      <td>2016.054645</td>\n","      <td>2016-01-21 09:19:26-05:00</td>\n","      <td>9.323889</td>\n","    </tr>\n","    <tr>\n","      <th>690180284189310976</th>\n","      <td>2016-01-21 14:32:57+00:00</td>\n","      <td>Twitter for Android</td>\n","      <td>low energy candidate @jebbush has wasted $80 million on his failed presidential campaign. millions spent on me. he should go home and relax!</td>\n","      <td>2886</td>\n","      <td>2016.054645</td>\n","      <td>2016-01-21 09:32:57-05:00</td>\n","      <td>9.549167</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dce958e0-cc25-49b1-8a22-2edc6d1f8b7a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dce958e0-cc25-49b1-8a22-2edc6d1f8b7a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dce958e0-cc25-49b1-8a22-2edc6d1f8b7a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":102}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","trump['text'] = trump['text'].str.lower()\n","# -----------------------\n","# END YOUR CODE\n","trump.head()"]},{"cell_type":"code","execution_count":103,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"QzmEPoBKxYfz","outputId":"518e23eb-74d0-42a2-a0fd-64c423d62fe4","executionInfo":{"status":"ok","timestamp":1681352601888,"user_tz":-540,"elapsed":20,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert trump['text'].loc[884740553040175104] == 'working hard to get the olympics for the united states (l.a.). stay tuned!'\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"5iHJEu7exYfz","nbgrader":{"grade":false,"grade_id":"q6c-header","locked":true,"schema_version":2,"solution":false}},"source":["### Question 6c\n","\n","Now, let's get rid of punctuation since it will cause us to fail to match words. Create a new column called `no_punc` in the `trump` DataFrame to be the lowercased text of each tweet with all punctuation replaced by a single space. We consider punctuation characters to be **any character that isn't a Unicode word character or a whitespace character**. You may want to consult the Python documentation on regexes for this problem.\n","\n","(Why don't we simply remove punctuation instead of replacing with a space? See if you can figure this out by looking at the tweet data.)\n","\n","<!--\n","BEGIN QUESTION\n","name: q5c\n","points: 1\n","-->"]},{"cell_type":"code","execution_count":104,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"0NnUe3ybxYfz","nbgrader":{"grade":false,"grade_id":"q6c","locked":false,"schema_version":2,"solution":true},"outputId":"2749bd19-4944-4ad4-c33d-00a5276e6bc0","tags":["student"],"executionInfo":{"status":"ok","timestamp":1681352601889,"user_tz":-540,"elapsed":19,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-104-885c6be2ec9b>:4: FutureWarning: The default value of regex will change from True to False in a future version.\n","  trump['no_punc'] = trump['text'].str.replace(punct_re,' ')\n"]}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","punct_re = r'[^\\w]+|\\s+'  # Save your regex in punct_re\n","trump['no_punc'] = trump['text'].str.replace(punct_re,' ')\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"code","execution_count":105,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"d0v7xOk9xYfz","outputId":"ba3b31fa-9b0b-479d-f49f-018f9bc19a3a","executionInfo":{"status":"ok","timestamp":1681352601889,"user_tz":-540,"elapsed":17,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert re.search(punct_re, 'this') == None\n","assert re.search(punct_re, 'this is not ok.') != None\n","assert re.search(punct_re, 'this#is#ok') != None\n","assert re.search(punct_re, 'this^is ok') != None\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"CzfdFKYgxYfz","nbgrader":{"grade":false,"grade_id":"q6d-header","locked":true,"schema_version":2,"solution":false}},"source":["### Question 6d\n","\n","Now, let's convert the tweets into what's called a [*tidy format*](https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html) to make the sentiments easier to calculate. Use the `no_punc` column of `trump` to create a table called `tidy_format`. The index of the table should be the IDs of the tweets, repeated once for every word in the tweet. It has two columns:\n","\n","1. `num`: The location of the word in the tweet. For example, if the tweet was \"i love america\", then the location of the word \"i\" is 0, \"love\" is 1, and \"america\" is 2.\n","2. `word`: The individual words of each tweet.\n","\n","The first few rows of our `tidy_format` table look like:\n","\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num</th>\n","      <th>word</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>894661651760377856</th>\n","      <td>0</td>\n","      <td>i</td>\n","    </tr>\n","    <tr>\n","      <th>894661651760377856</th>\n","      <td>1</td>\n","      <td>think</td>\n","    </tr>\n","    <tr>\n","      <th>894661651760377856</th>\n","      <td>2</td>\n","      <td>senator</td>\n","    </tr>\n","    <tr>\n","      <th>894661651760377856</th>\n","      <td>3</td>\n","      <td>blumenthal</td>\n","    </tr>\n","    <tr>\n","      <th>894661651760377856</th>\n","      <td>4</td>\n","      <td>should</td>\n","    </tr>\n","  </tbody>\n","</table>\n","\n","**Note that your DataFrame may look different from the one above.** However, you can double check that your tweet with ID `894661651760377856` has the same rows as ours. Our tests don't check whether your table looks exactly like ours.\n","\n","As usual, try to avoid using any for loops. Our solution uses a chain of 5 methods on the `trump` DataFrame, albeit using some rather advanced Pandas hacking.\n","\n","* **Hint 1:** Try looking at the `expand` argument to pandas' `str.split`.\n","\n","* **Hint 2:** Try looking at the `stack()` method.\n","\n","* **Hint 3:** Try looking at the `level` parameter of the `reset_index` method.\n","\n","<!--\n","BEGIN QUESTION\n","name: q5d\n","points: 2\n","-->"]},{"cell_type":"code","source":["trump['no_punc'].loc[690171032150237184]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"vdvERCobEUUk","executionInfo":{"status":"ok","timestamp":1681352601889,"user_tz":-540,"elapsed":16,"user":{"displayName":"류지현","userId":"09927187888088003754"}},"outputId":"59a9569b-37cf-4644-da97-2e9353371cda"},"execution_count":106,"outputs":[{"output_type":"execute_result","data":{"text/plain":["' bigop1 realdonaldtrump sarahpalinusa https t co 3kyqgqevyd '"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":106}]},{"cell_type":"code","execution_count":107,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"2LZS5fv6xYfz","nbgrader":{"grade":false,"grade_id":"q6d-answer","locked":false,"schema_version":2,"solution":true},"outputId":"10667be1-fd04-4938-c01c-3ed6b4d51ec9","tags":["student"],"executionInfo":{"status":"ok","timestamp":1681352601889,"user_tz":-540,"elapsed":15,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    num             word\n","690171032150237184    0           bigop1\n","690171032150237184    1  realdonaldtrump\n","690171032150237184    2    sarahpalinusa\n","690171032150237184    3            https\n","690171032150237184    4                t"],"text/html":["\n","  <div id=\"df-3a30b2df-3d3a-4aa0-b7ff-cf34e7851c53\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num</th>\n","      <th>word</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>690171032150237184</th>\n","      <td>0</td>\n","      <td>bigop1</td>\n","    </tr>\n","    <tr>\n","      <th>690171032150237184</th>\n","      <td>1</td>\n","      <td>realdonaldtrump</td>\n","    </tr>\n","    <tr>\n","      <th>690171032150237184</th>\n","      <td>2</td>\n","      <td>sarahpalinusa</td>\n","    </tr>\n","    <tr>\n","      <th>690171032150237184</th>\n","      <td>3</td>\n","      <td>https</td>\n","    </tr>\n","    <tr>\n","      <th>690171032150237184</th>\n","      <td>4</td>\n","      <td>t</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a30b2df-3d3a-4aa0-b7ff-cf34e7851c53')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3a30b2df-3d3a-4aa0-b7ff-cf34e7851c53 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3a30b2df-3d3a-4aa0-b7ff-cf34e7851c53');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":107}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","tidy_format = trump['no_punc'].str.strip().str.split(' ',expand=True).stack().reset_index(level=1,name='word').rename(columns={'level_1':'num'})\n","# -----------------------\n","# END YOUR CODE\n","tidy_format.head()"]},{"cell_type":"code","execution_count":108,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"lY7k4RwSxYfz","outputId":"0ef0730b-d418-4d06-b2e9-f14ef358dc63","executionInfo":{"status":"ok","timestamp":1681352601890,"user_tz":-540,"elapsed":16,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert tidy_format.loc[894661651760377856].shape == (27,2)\n","assert ' '.join(list(tidy_format.loc[894661651760377856]['word'])) == 'i think senator blumenthal should take a nice long vacation in vietnam where he lied about his service so he can at least say he was there'\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"ofbg7rlYxYfz","nbgrader":{"grade":false,"grade_id":"q6e-header","locked":true,"schema_version":2,"solution":false}},"source":["### Question 6e\n","\n","Now that we have this table in the tidy format, it becomes much easier to find the sentiment of each tweet: we can join the table with the lexicon table. \n","\n","Add a `polarity` column to the `trump` table.  The `polarity` column should contain the sum of the sentiment polarity of each word in the text of the tweet.\n","\n","**Hints:** \n","* You will need to merge the `tidy_format` and `sent` tables and group the final answer.\n","* If certain words are not found in the `sent` table, set their polarities to 0.\n","\n","<!--\n","BEGIN QUESTION\n","name: q5e\n","points: 2\n","-->"]},{"cell_type":"code","source":["# BEGIN YOUR CODE\n","# -----------------------\n","polarity = pd.merge(tidy_format, sent, how='left', left_on='word', right_index=True)\n","trump['polarity'] = polarity.groupby(level=0).sum().drop(columns='num')\n","# -----------------------\n","# END YOUR CODE\n","trump[['text', 'polarity']].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":375},"id":"r6haRtBDw5Pm","executionInfo":{"status":"ok","timestamp":1681352602386,"user_tz":-540,"elapsed":510,"user":{"displayName":"류지현","userId":"09927187888088003754"}},"outputId":"efeeaa0f-998b-4952-ddf3-05d8a97b7f7a"},"execution_count":109,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-109-8454d611649e>:4: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  trump['polarity'] = polarity.groupby(level=0).sum().drop(columns='num')\n"]},{"output_type":"execute_result","data":{"text/plain":["                                                                                                                                                            text  \\\n","690171032150237184                                                                           \"@bigop1: @realdonaldtrump  @sarahpalinusa https://t.co/3kyqgqevyd\"   \n","690171403388104704             \"@americanaspie:  @glennbeck @sarahpalinusa remember when glenn gave out gifts to illegal aliens at crossing the border? me too!\"   \n","690173226341691392                   so sad that @cnn and many others refused to show the massive crowd at the arena yesterday in oklahoma. dishonest reporting!   \n","690176882055114758    sad sack @jebbush has just done another ad on me, with special interest money, saying i won't beat hillary - i will. but he can't beat me.   \n","690180284189310976  low energy candidate @jebbush has wasted $80 million on his failed presidential campaign. millions spent on me. he should go home and relax!   \n","\n","                    polarity  \n","690171032150237184       0.0  \n","690171403388104704      -2.6  \n","690173226341691392      -6.0  \n","690176882055114758       4.3  \n","690180284189310976      -2.6  "],"text/html":["\n","  <div id=\"df-54eaa591-e528-40c2-b872-b37e47b52d38\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>polarity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>690171032150237184</th>\n","      <td>\"@bigop1: @realdonaldtrump  @sarahpalinusa https://t.co/3kyqgqevyd\"</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>690171403388104704</th>\n","      <td>\"@americanaspie:  @glennbeck @sarahpalinusa remember when glenn gave out gifts to illegal aliens at crossing the border? me too!\"</td>\n","      <td>-2.6</td>\n","    </tr>\n","    <tr>\n","      <th>690173226341691392</th>\n","      <td>so sad that @cnn and many others refused to show the massive crowd at the arena yesterday in oklahoma. dishonest reporting!</td>\n","      <td>-6.0</td>\n","    </tr>\n","    <tr>\n","      <th>690176882055114758</th>\n","      <td>sad sack @jebbush has just done another ad on me, with special interest money, saying i won't beat hillary - i will. but he can't beat me.</td>\n","      <td>4.3</td>\n","    </tr>\n","    <tr>\n","      <th>690180284189310976</th>\n","      <td>low energy candidate @jebbush has wasted $80 million on his failed presidential campaign. millions spent on me. he should go home and relax!</td>\n","      <td>-2.6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54eaa591-e528-40c2-b872-b37e47b52d38')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-54eaa591-e528-40c2-b872-b37e47b52d38 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-54eaa591-e528-40c2-b872-b37e47b52d38');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":109}]},{"cell_type":"code","execution_count":110,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"0cyNPRfdxYf0","outputId":"e17f4538-9245-4ebc-d18a-d5e48f06c0d3","executionInfo":{"status":"ok","timestamp":1681352602387,"user_tz":-540,"elapsed":16,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Passed all unit tests!\n"]}],"source":["assert np.allclose(trump.loc[744701872456536064, 'polarity'], 8.4)\n","assert np.allclose(trump.loc[745304731346702336, 'polarity'], 2.5)\n","assert np.allclose(trump.loc[744519497764184064, 'polarity'], 1.7)\n","assert np.allclose(trump.loc[894661651760377856, 'polarity'], 0.2)\n","assert np.allclose(trump.loc[894620077634592769, 'polarity'], 5.4)\n","\n","print('Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"3S7Xn62FxYf0","nbgrader":{"grade":false,"grade_id":"a-note-on-vader","locked":true,"schema_version":2,"solution":false}},"source":["Now we have a measure of the sentiment of each of his tweets! Note that this calculation is rather basic; you can read over the VADER readme to understand a more robust sentiment analysis.\n","\n","Now, run the cells below to see the most positive and most negative tweets from Trump in your dataset:"]},{"cell_type":"code","execution_count":111,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"GKcglj04xYf0","nbgrader":{"grade":false,"grade_id":"negative-tweets","locked":true,"schema_version":2,"solution":false},"outputId":"9a400ac6-3fc1-4eeb-ca8d-96c6420ebb15","executionInfo":{"status":"ok","timestamp":1681352602387,"user_tz":-540,"elapsed":13,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Most negative tweets:\n","\n","   the trump portrait of an unsustainable border crisis is dead on. “in the last two years, ice officers made 266,000 arrests of aliens with criminal records, including those charged or convicted of 100,000 assaults, 30,000 sex crimes &amp; 4000 violent killings.” america’s southern....\n","\n","   it is outrageous that poisonous synthetic heroin fentanyl comes pouring into the u.s. postal system from china. we can, and must, end this now! the senate should pass the stop act – and firmly stop this poison from killing our children and destroying our country. no more delay!\n","\n","   the rigged russian witch hunt goes on and on as the “originators and founders” of this scam continue to be fired and demoted for their corrupt and illegal activity. all credibility is gone from this terrible hoax, and much more will be lost as it proceeds. no collusion!\n","\n","   ...this evil anti-semitic attack is an assault on humanity. it will take all of us working together to extract the poison of anti-semitism from our world. we must unite to conquer hate.\n","\n","   james comey is a proven leaker &amp; liar. virtually everyone in washington thought he should be fired for the terrible job he did-until he was, in fact, fired. he leaked classified information, for which he should be prosecuted. he lied to congress under oath. he is a weak and.....\n"]}],"source":["print('Most negative tweets:')\n","for t in trump.sort_values('polarity').head()['text']:\n","    print('\\n  ', t)"]},{"cell_type":"code","execution_count":112,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"HGXtfGRNxYf0","nbgrader":{"grade":false,"grade_id":"postive-tweets","locked":true,"schema_version":2,"solution":false},"outputId":"d4b53f53-d3a7-4de9-f98a-5a0b48d28be9","scrolled":true,"executionInfo":{"status":"ok","timestamp":1681352602387,"user_tz":-540,"elapsed":11,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Most positive tweets:\n","\n","   congratulations to patrick reed on his great and courageous masters win! when patrick had his amazing win at doral 5 years ago, people saw his great talent, and a bright future ahead. now he is the masters champion!\n","\n","   congratulations to a truly great football team, the clemson tigers, on an incredible win last night against a powerful alabama team. a big win also for the great state of south carolina. look forward to seeing the team, and their brilliant coach, for the second time at the w.h.\n","\n","   my supporters are the smartest, strongest, most hard working and most loyal that we have seen in our countries history. it is a beautiful thing to watch as we win elections and gather support from all over the country. as we get stronger, so does our country. best numbers ever!\n","\n","   thank you to all of my great supporters, really big progress being made. other countries wanting to fix crazy trade deals. economy is roaring. supreme court pick getting great reviews. new poll says trump, at over 90%, is the most popular republican in history of the party. wow!\n","\n","   thank you, @wvgovernor jim justice, for that warm introduction. tonight, it was my great honor to attend the “greenbrier classic – salute to service dinner” in west virginia! god bless our veterans. god bless america - and happy independence day to all! https://t.co/v35qvcn8m6\n"]}],"source":["print('Most positive tweets:')\n","for t in trump.sort_values('polarity', ascending=False).head()['text']:\n","    print('\\n  ', t)"]},{"cell_type":"markdown","metadata":{"id":"LjmxuL0mxYf0","nbgrader":{"grade":false,"grade_id":"q6g","locked":true,"schema_version":2,"solution":false}},"source":["---\n","\n","Now, let's try looking at the distributions of sentiments for tweets containing certain keywords.\n","\n","In the cell below, we create a single plot showing both the distribution of tweet sentiments for tweets containing `nytimes`, as well as the distribution of tweet sentiments for tweets containing `fox`. Here, we notice that the president appears to say more positive things about Fox than the New York Times."]},{"cell_type":"code","execution_count":113,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":937},"id":"JikqDZ5KxYf0","nbgrader":{"grade":true,"grade_id":"q6g-answer","locked":false,"points":1,"schema_version":2,"solution":true},"outputId":"f989f9dc-ff8d-4f88-d4d2-fce7afeae055","tags":["student"],"executionInfo":{"status":"ok","timestamp":1681352603236,"user_tz":-540,"elapsed":858,"user":{"displayName":"류지현","userId":"09927187888088003754"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-113-2c44e2f04d2d>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(trump[trump['text'].str.lower().str.contains(\"nytimes\")]['polarity'], label = 'nytimes')\n","<ipython-input-113-2c44e2f04d2d>:2: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(trump[trump['text'].str.lower().str.contains(\"fox\")]['polarity'], label = 'fox')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["sns.distplot(trump[trump['text'].str.lower().str.contains(\"nytimes\")]['polarity'], label = 'nytimes')\n","sns.distplot(trump[trump['text'].str.lower().str.contains(\"fox\")]['polarity'], label = 'fox')\n","plt.title('Distributions of Tweet Polarities (nytimes vs. fox)')\n","plt.legend();"]},{"cell_type":"markdown","metadata":{"id":"5DMmLoLKxYf0"},"source":["### Congratulations! You have completed HW2.\n","\n","Make sure you have run all cells in your notebook in order before running the cell below, so that all images/graphs appear in the output.,\n","\n","Please generate pdf as follows and submit it to Gradescope.\n","\n","**File > Print Preview > Print > Save as pdf**\n","\n","**Please save before submitting!**\n","\n","<!-- EXPECT 5 EXPORTED QUESTIONS -->"]}],"metadata":{"colab":{"provenance":[],"toc_visible":true},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":false,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{},"toc_section_display":true,"toc_window_display":false}},"nbformat":4,"nbformat_minor":0}